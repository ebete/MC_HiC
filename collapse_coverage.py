#!/usr/bin/env python3

import argparse
import logging
from statistics import median_low


def collapse_depth(depth_file):
    max_gap = 10
    with open(depth_file, "r") as depth:
        start_idx = 0
        prev_idx = 0
        prev_chr = "unknown"
        depths = [0]
        print("chr_coord", "median_depth", sep="\t")
        for line in depth:
            line = line.strip().split("\t")
            cur_chr = line[0]
            cur_idx = int(line[1])
            cur_depth = int(line[2])
            if prev_chr != cur_chr or prev_idx + max_gap + 1 < cur_idx:
                # positions too distant
                print("{:s}:{:d}-{:d}".format(prev_chr, start_idx, prev_idx),
                      "{:.0f}".format(median_low(depths)), sep="\t")
                start_idx = cur_idx
                prev_chr = cur_chr
                depths = []
            else:
                depths.append(cur_depth)
            prev_idx = cur_idx


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, format="[%(asctime)s]: %(message)s")

    # get command line arguments
    parser = argparse.ArgumentParser()
    parser.add_argument("input_depth", help="Alignment depth file generated by samtools depth.", metavar="SAM",
                        action="store", type=str)
    args = parser.parse_args()

    collapse_depth(args.input_depth)
